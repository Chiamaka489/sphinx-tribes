{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for Sphinx Tribes.",
        "title": "Sphinx Tribes API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:5002",
    "basePath": "/",
    "paths": {
        "/activities": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new activity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Create an activity",
                "parameters": [
                    {
                        "description": "Activity object",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    }
                }
            }
        },
        "/activities/feature/{feature_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get activities by feature UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get activities by feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature UUID",
                        "name": "feature_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivitiesResponse"
                        }
                    }
                }
            }
        },
        "/activities/phase/{phase_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get activities by phase UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get activities by phase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phase UUID",
                        "name": "phase_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivitiesResponse"
                        }
                    }
                }
            }
        },
        "/activities/receive": {
            "post": {
                "description": "Receives activity data from a webhook, validates it, and creates a new activity record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Receive and process a new activity",
                "parameters": [
                    {
                        "description": "Activity information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload, invalid public key format, invalid source ID format, or other validation errors",
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookResponse"
                        }
                    }
                }
            }
        },
        "/activities/thread": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new activity thread",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Create an activity thread",
                "parameters": [
                    {
                        "description": "Activity object",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateActivityRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Source ID",
                        "name": "source_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    }
                }
            }
        },
        "/activities/thread/{thread_id}": {
            "get": {
                "description": "Get activities by thread ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get activities by thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "thread_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityThreadResponse"
                        }
                    },
                    "400": {
                        "description": "thread_id is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get activities",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activities/thread/{thread_id}/latest": {
            "get": {
                "description": "Get the latest activity by thread ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get the latest activity by thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread ID",
                        "name": "thread_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    },
                    "400": {
                        "description": "thread_id is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get latest activity",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activities/workspace/{workspace}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get activities by workspace",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Get activities by workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivitiesResponse"
                        }
                    }
                }
            }
        },
        "/activities/{id}": {
            "get": {
                "description": "Fetch a specific activity by its unique identifier",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Retrieve activity details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    },
                    "400": {
                        "description": "ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "activity not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update an existing activity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Update an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activity object",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Activity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete an activity by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Delete an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/activities/{id}/actions": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Add actions to an activity by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Add actions to an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action content",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    }
                }
            }
        },
        "/activities/{id}/actions/{action_id}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Remove an action from an activity by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Remove an action from an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Action ID",
                        "name": "action_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    }
                }
            }
        },
        "/activities/{id}/questions": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Add questions to an activity by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Add questions to an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question content",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    }
                }
            }
        },
        "/activities/{id}/questions/{question_id}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Remove a question from an activity by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Activities"
                ],
                "summary": "Remove a question from an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "question_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActivityResponse"
                        }
                    }
                }
            }
        },
        "/admin/auth": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Check if the user is an admin. Requires a valid JWT token in the request context.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Check if user is admin",
                "responses": {
                    "200": {
                        "description": "Returns a success message if the user is an admin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: User is not an admin or missing/invalid JWT token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin_pubkeys": {
            "get": {
                "description": "Get a list of admin pubkeys",
                "tags": [
                    "Auth"
                ],
                "summary": "Get admin pubkeys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/badges": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Add or remove a badge for a person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Add or Remove Badge",
                "parameters": [
                    {
                        "description": "Badge Creation Data",
                        "name": "badgeCreationData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.BadgeCreationData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Tribe"
                        }
                    }
                }
            }
        },
        "/bot/unique_name": {
            "get": {
                "description": "Get unique name from bot name",
                "tags": [
                    "Bots"
                ],
                "summary": "Get unique name from bot name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bot name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bot/{name}": {
            "get": {
                "description": "Get a bot by unique name",
                "tags": [
                    "Bots"
                ],
                "summary": "Get a bot by unique name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique name",
                        "name": "unique_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bot"
                        }
                    }
                }
            }
        },
        "/bot/{uuid}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a bot by UUID",
                "tags": [
                    "Bots"
                ],
                "summary": "Delete a bot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bot UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/bots": {
            "get": {
                "description": "Get a list of listed bots",
                "tags": [
                    "Bots"
                ],
                "summary": "Get listed bots",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Bot"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a bot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bots"
                ],
                "summary": "Create or edit a bot",
                "parameters": [
                    {
                        "description": "Bot object",
                        "name": "bot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Bot"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bot"
                        }
                    }
                }
            }
        },
        "/bots/owner/{pubkey}": {
            "get": {
                "description": "Get a list of bots by owner public key",
                "tags": [
                    "Bots"
                ],
                "summary": "Get bots by owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner public key",
                        "name": "pubkey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Bot"
                            }
                        }
                    }
                }
            }
        },
        "/bots/{uuid}": {
            "get": {
                "description": "Get a bot by UUID",
                "tags": [
                    "Bots"
                ],
                "summary": "Get a bot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bot UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bot"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/bounty/bulk": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Convert multiple tickets to bounties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Convert Tickets to Bounties",
                "parameters": [
                    {
                        "description": "Bulk Ticket to Bounty Request",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.BulkTicketToBountyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BulkConversionResponse"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/feature/{feature_uuid}/phase/{phase_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get tickets by phase UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Get Tickets by Phase UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature UUID",
                        "name": "feature_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Phase UUID",
                        "name": "phase_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Tickets"
                            }
                        }
                    }
                }
            }
        },
        "/bounties/ticket/group/{group_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get tickets by group UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Get Tickets by Group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group UUID",
                        "name": "group_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Tickets"
                            }
                        }
                    }
                }
            }
        },
        "/bounties/ticket/plan": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new ticket plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Create Ticket Plan",
                "parameters": [
                    {
                        "description": "Create Ticket Plan Request",
                        "name": "planRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTicketPlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.TicketPlanResponse"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/plan/feature/{feature_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get ticket plans by feature UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Get Ticket Plans by Feature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature UUID",
                        "name": "feature_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TicketPlan"
                            }
                        }
                    }
                }
            }
        },
        "/bounties/ticket/plan/phase/{phase_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get ticket plans by phase UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Get Ticket Plans by Phase",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phase UUID",
                        "name": "phase_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TicketPlan"
                            }
                        }
                    }
                }
            }
        },
        "/bounties/ticket/plan/review": {
            "post": {
                "description": "Process the review of a ticket plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Process Ticket Plan Review",
                "parameters": [
                    {
                        "description": "Ticket Plan Review Request",
                        "name": "planReview",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.TicketPlanReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TicketPlanReviewResponse"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/plan/send": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Send a ticket plan to Stakwork for processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Send Ticket Plan to Stakwork",
                "parameters": [
                    {
                        "description": "Send Ticket Plan Request",
                        "name": "planRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SendTicketPlanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SendTicketPlanResponse"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/plan/workspace/{workspace_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get ticket plans by workspace UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Get Ticket Plans by Workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TicketPlan"
                            }
                        }
                    }
                }
            }
        },
        "/bounties/ticket/plan/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a ticket plan by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Get Ticket Plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket Plan UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TicketPlan"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a ticket plan by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket Plans"
                ],
                "summary": "Delete Ticket Plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket Plan UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket plan deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/review": {
            "post": {
                "description": "Process the review of a ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Process Ticket Review",
                "parameters": [
                    {
                        "description": "Ticket Review Request",
                        "name": "reviewReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.TicketReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Tickets"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/review/send": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Post ticket data to Stakwork for processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Post Ticket Data to Stakwork",
                "parameters": [
                    {
                        "description": "Update Ticket Request",
                        "name": "ticketRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTicketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TicketResponse"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/workspace/{workspace_uuid}/draft": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a draft ticket for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Create Workspace Draft Ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Draft Ticket Request",
                        "name": "ticketRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrEditTicket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Tickets"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/workspace/{workspace_uuid}/draft/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a draft ticket for a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Get Workspace Draft Ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ticket UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Tickets"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update a draft ticket for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Update Workspace Draft Ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ticket UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Draft Ticket Request",
                        "name": "ticketRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrEditTicket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Tickets"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a draft ticket for a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Delete Workspace Draft Ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ticket UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/{ticket_group}/sequence": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the sequence of tickets in a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Update Ticket Sequence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket Group UUID",
                        "name": "ticket_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Ticket Sequence Request",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTicketSequenceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket sequences updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/{ticket_uuid}/bounty": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Convert a ticket to a bounty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Convert Ticket to Bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket UUID",
                        "name": "ticket_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateBountyResponse"
                        }
                    }
                }
            }
        },
        "/bounties/ticket/{uuid}": {
            "get": {
                "description": "Get a ticket by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Get Ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Tickets"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update an existing ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Update Ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Ticket Request",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateTicketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Tickets"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a ticket by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounty Tickets"
                ],
                "summary": "Delete Ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket group deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bounty/assignee": {
            "delete": {
                "description": "Delete the assignee of a bounty. Only the bounty owner can perform this action.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties"
                ],
                "summary": "Delete a bounty assignee",
                "parameters": [
                    {
                        "description": "Request body containing owner_pubkey and created timestamp",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.DeleteBountyAssignee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignee deleted successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request: Missing or invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "Not acceptable: Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error: Failed to delete assignee",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bounty/leaderboard": {
            "get": {
                "description": "Get bounties leaderboard",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get bounties leaderboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.LeaderData"
                            }
                        }
                    }
                }
            }
        },
        "/bounty/{id}/proof/{proofId}/status": {
            "put": {
                "description": "Update the status of a proof of work for a specific bounty. Valid statuses are \"accepted\", \"rejected\", and \"change_requested\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Proof of Work"
                ],
                "summary": "Update the status of a proof of work",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof of Work ID",
                        "name": "proofId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New status for the proof of work",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProofStatusResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProofStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid proof ID, bounty ID, or status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error: Failed to update status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/channel": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new channel within a tribe. Only the tribe owner can perform this action.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Create a channel",
                "parameters": [
                    {
                        "description": "Request body containing tribe UUID and channel name",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Channel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel created successfully",
                        "schema": {
                            "$ref": "#/definitions/db.Channel"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid request body"
                    },
                    "401": {
                        "description": "Unauthorized: User is not the tribe owner"
                    },
                    "406": {
                        "description": "Not acceptable: Channel name already in use or invalid data"
                    }
                }
            }
        },
        "/channel/{id}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a channel by marking it as deleted. Only the tribe owner can perform this action.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "Delete a channel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel deleted successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid channel ID"
                    },
                    "401": {
                        "description": "Unauthorized: User is not the tribe owner or invalid credentials"
                    },
                    "404": {
                        "description": "Not found: Channel does not exist"
                    }
                }
            }
        },
        "/connectioncodes": {
            "get": {
                "description": "Retrieve a single connection code from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get a connection code",
                "responses": {
                    "200": {
                        "description": "Connection code retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/db.ConnectionCodesShort"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Create one or more connection codes for a user. Requires a valid pubkey and route hint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create connection codes",
                "parameters": [
                    {
                        "description": "Request body containing pubkey, route hint, sats amount, and number of codes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.InviteBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection codes created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request: Missing or invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "Not acceptable: Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/connectioncodes/list": {
            "get": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "List all connection codes with pagination support.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "List connection codes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default: 20)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection codes retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConnectionCodesListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConnectionCodesListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error: Failed to retrieve connection codes",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConnectionCodesListResponse"
                        }
                    }
                }
            }
        },
        "/feature-flags": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a list of all feature flags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flag"
                ],
                "summary": "Get all feature flags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new feature flag with specified details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flag"
                ],
                "summary": "Create a new feature flag",
                "parameters": [
                    {
                        "description": "Feature flag details",
                        "name": "feature_flag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateFeatureFlagRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagResponse"
                        }
                    }
                }
            }
        },
        "/feature-flags/{feature_flag_id}/endpoints": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Add new endpoints to an existing feature flag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flag"
                ],
                "summary": "Add endpoints to a feature flag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature flag ID",
                        "name": "feature_flag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Endpoints to add",
                        "name": "endpoints",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddFeatureFlagEndpointRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagResponse"
                        }
                    }
                }
            }
        },
        "/feature-flags/{feature_flag_id}/endpoints/{endpoint_id}": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the details of an endpoint of an existing feature flag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flag"
                ],
                "summary": "Update an endpoint of a feature flag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature flag ID",
                        "name": "feature_flag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Endpoint ID",
                        "name": "endpoint_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated endpoint details",
                        "name": "endpoint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateFeatureFlagEndpointRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete an endpoint of a feature flag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flag"
                ],
                "summary": "Delete an endpoint of a feature flag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature flag ID",
                        "name": "feature_flag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Endpoint ID",
                        "name": "endpoint_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagResponse"
                        }
                    }
                }
            }
        },
        "/feature-flags/{id}": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the details of an existing feature flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flag"
                ],
                "summary": "Update an existing feature flag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature flag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated feature flag details",
                        "name": "feature_flag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateFeatureFlagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a feature flag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature Flag"
                ],
                "summary": "Delete a feature flag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feature flag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FeatureFlagResponse"
                        }
                    }
                }
            }
        },
        "/features": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit features",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Create or Edit Features",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceFeatures"
                        }
                    }
                }
            }
        },
        "/features/brief": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the brief of a feature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Update Feature Brief",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceFeatures"
                        }
                    }
                }
            }
        },
        "/features/brief/send": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Send the brief of a feature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Send Feature Brief",
                "responses": {
                    "200": {
                        "description": "Successfully sent",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/features/forworkspace/{workspace_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get features by workspace UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Workspaces"
                ],
                "summary": "Get Features by Workspace UUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.WorkspaceFeatures"
                            }
                        }
                    }
                }
            }
        },
        "/features/phase": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a phase of a feature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Phases"
                ],
                "summary": "Create or Edit Feature Phase",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.FeaturePhase"
                        }
                    }
                }
            }
        },
        "/features/stories": {
            "post": {
                "description": "Get stories for a feature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Stories"
                ],
                "summary": "Get Feature Stories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.FeatureStoriesReponse"
                        }
                    }
                }
            }
        },
        "/features/stories/send": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Send stories of a feature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Stories"
                ],
                "summary": "Send Stories",
                "responses": {
                    "200": {
                        "description": "Successfully sent",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/features/story": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a story of a feature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Stories"
                ],
                "summary": "Create or Edit Story",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.FeatureStory"
                        }
                    }
                }
            }
        },
        "/features/workspace/count/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the count of features in a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Workspaces"
                ],
                "summary": "Get Workspace Features Count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/phase": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get phases of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Phases"
                ],
                "summary": "Get Feature Phases",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.FeaturePhase"
                            }
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/phase/{phase_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a phase of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Phases"
                ],
                "summary": "Get Feature Phase by UUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.FeaturePhase"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a phase of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Phases"
                ],
                "summary": "Delete Feature Phase",
                "responses": {
                    "200": {
                        "description": "Phase deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/phase/{phase_uuid}/bounty": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get bounties of a feature by its UUID and phase UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Phases"
                ],
                "summary": "Get Bounties by Feature and Phase UUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.BountyResponse"
                            }
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/phase/{phase_uuid}/bounty/count": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the count of bounties of a feature by its UUID and phase UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Phases"
                ],
                "summary": "Get Bounties Count by Feature and Phase UUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/quick-bounties": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get quick bounties of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Get Quick Bounties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.QuickBountiesResponse"
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/quick-tickets": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get quick tickets of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Get Quick Tickets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.QuickTicketsResponse"
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/story": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get stories of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Stories"
                ],
                "summary": "Get Stories by Feature UUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.FeatureStory"
                            }
                        }
                    }
                }
            }
        },
        "/features/{feature_uuid}/story/{story_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a story of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Stories"
                ],
                "summary": "Get Story by UUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.FeatureStory"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a story of a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feature - Stories"
                ],
                "summary": "Delete Story",
                "responses": {
                    "200": {
                        "description": "Story deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/features/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Get Feature by UUID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceFeatures"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a feature by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Delete Feature",
                "responses": {
                    "200": {
                        "description": "Feature deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/features/{uuid}/status": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the status of a feature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Features"
                ],
                "summary": "Update Feature Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceFeatures"
                        }
                    }
                }
            }
        },
        "/feed": {
            "get": {
                "description": "Get a generic feed by URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Get Generic Feed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed URL",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "uuid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/feeds.Feed"
                        }
                    }
                }
            }
        },
        "/feed/download": {
            "post": {
                "description": "Download a Youtube feed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Download Youtube Feed",
                "parameters": [
                    {
                        "description": "Youtube Download",
                        "name": "youtube_download",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.YoutubeDownload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Youtube download processed successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/github_issues/status/open": {
            "get": {
                "description": "Get the count of open Github issues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Get Open Github Issues",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/github_issues/{owner}/{repo}/{issue}": {
            "get": {
                "description": "Get a Github issue by owner, repo, and issue number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Github"
                ],
                "summary": "Get Github Issue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository",
                        "name": "repo",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Issue Number",
                        "name": "issue",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GithubIssue"
                        }
                    }
                }
            }
        },
        "/gobounties": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a bounty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties"
                ],
                "summary": "Create or edit a bounty",
                "parameters": [
                    {
                        "description": "Bounty object",
                        "name": "bounty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.NewBounty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NewBounty"
                        }
                    }
                }
            }
        },
        "/gobounties/all": {
            "get": {
                "description": "Get a list of all bounties",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get all bounties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Bounty"
                            }
                        }
                    }
                }
            }
        },
        "/gobounties/bounty-cards": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get bounty cards",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties"
                ],
                "summary": "Get bounty cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.BountyCard"
                            }
                        }
                    }
                }
            }
        },
        "/gobounties/budget/withdraw": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Withdraw bounty budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Withdraw bounty budget",
                "parameters": [
                    {
                        "description": "Withdraw Budget Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.NewWithdrawBudgetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.InvoicePaySuccess"
                        }
                    }
                }
            }
        },
        "/gobounties/completedstatus/{created}": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update completed status by created date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties"
                ],
                "summary": "Update completed status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Created",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NewBounty"
                        }
                    }
                }
            }
        },
        "/gobounties/count": {
            "get": {
                "description": "Get bounty count",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get bounty count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/gobounties/count/{personKey}/{tabType}": {
            "get": {
                "description": "Get user bounty count by person key and tab type",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get user bounty count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person Key",
                        "name": "personKey",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tab Type",
                        "name": "tabType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/gobounties/created/{created}": {
            "get": {
                "description": "Get bounty by created date",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get bounty by created date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Created date",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bounty"
                        }
                    }
                }
            }
        },
        "/gobounties/featured/all": {
            "get": {
                "description": "Get all featured bounties",
                "tags": [
                    "Featured Bounties"
                ],
                "summary": "Get all featured bounties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.FeaturedBounty"
                            }
                        }
                    }
                }
            }
        },
        "/gobounties/featured/create": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a featured bounty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Featured Bounties"
                ],
                "summary": "Create a featured bounty",
                "parameters": [
                    {
                        "description": "Featured Bounty object",
                        "name": "bounty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.FeaturedBounty"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.FeaturedBounty"
                        }
                    }
                }
            }
        },
        "/gobounties/featured/delete/{bountyId}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a featured bounty by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Featured Bounties"
                ],
                "summary": "Delete a featured bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "bountyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/gobounties/featured/update": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update a featured bounty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Featured Bounties"
                ],
                "summary": "Update a featured bounty",
                "parameters": [
                    {
                        "description": "Featured Bounty object",
                        "name": "bounty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.FeaturedBounty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.FeaturedBounty"
                        }
                    }
                }
            }
        },
        "/gobounties/filter/count": {
            "get": {
                "description": "Get filter count",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get filter count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.FilterStatusCount"
                        }
                    }
                }
            }
        },
        "/gobounties/id/{bountyId}": {
            "get": {
                "description": "Get a bounty by ID",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get a bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bounty"
                        }
                    }
                }
            }
        },
        "/gobounties/index/{bountyId}": {
            "get": {
                "description": "Get bounty index by ID",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get bounty index",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/gobounties/invoice/{paymentRequest}": {
            "get": {
                "description": "Get invoice data by payment request",
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Get invoice data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment Request",
                        "name": "paymentRequest",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceResult"
                        }
                    }
                }
            }
        },
        "/gobounties/next/{created}": {
            "get": {
                "description": "Get next bounty by created date",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get next bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Created date",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bounty"
                        }
                    }
                }
            }
        },
        "/gobounties/org/next/{uuid}/{created}": {
            "get": {
                "description": "Get next workspace bounty by created date",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get next workspace bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Created date",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bounty"
                        }
                    }
                }
            }
        },
        "/gobounties/org/previous/{uuid}/{created}": {
            "get": {
                "description": "Get previous workspace bounty by created date",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get previous workspace bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Created date",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bounty"
                        }
                    }
                }
            }
        },
        "/gobounties/org/timerange/{workspaceId}/{daysStart}/{daysEnd}": {
            "get": {
                "description": "Get bounties by workspace time range",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get bounties by workspace time",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Days Start",
                        "name": "daysStart",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Days End",
                        "name": "daysEnd",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NodeListResponse"
                        }
                    }
                }
            }
        },
        "/gobounties/pay/{id}": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Make a bounty payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Make a bounty payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NewBounty"
                        }
                    }
                }
            }
        },
        "/gobounties/payment/status/{id}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get bounty payment status by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Get bounty payment status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NewPaymentHistory"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update bounty payment status by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Update bounty payment status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NewPaymentHistory"
                        }
                    }
                }
            }
        },
        "/gobounties/payment/{bountyId}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get payment by bounty ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Get payment by bounty ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "bountyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NewPaymentHistory"
                        }
                    }
                }
            }
        },
        "/gobounties/paymentstatus/{created}": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update payment status by created date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Update payment status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Created",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.NewBounty"
                        }
                    }
                }
            }
        },
        "/gobounties/previous/{created}": {
            "get": {
                "description": "Get previous bounty by created date",
                "tags": [
                    "Bounties"
                ],
                "summary": "Get previous bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Created date",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Bounty"
                        }
                    }
                }
            }
        },
        "/gobounties/{id}/proof": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Add proof of work to a bounty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Proof of Work"
                ],
                "summary": "Add proof of work",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Proof of Work object",
                        "name": "proof",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.ProofOfWork"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.ProofOfWork"
                        }
                    }
                }
            }
        },
        "/gobounties/{id}/proofs": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get proofs by bounty ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Proof of Work"
                ],
                "summary": "Get proofs by bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ProofOfWork"
                            }
                        }
                    }
                }
            }
        },
        "/gobounties/{id}/proofs/{proofId}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete proof by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Proof of Work"
                ],
                "summary": "Delete proof",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Proof ID",
                        "name": "proofId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/gobounties/{id}/timing": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get bounty timing stats by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Timing"
                ],
                "summary": "Get bounty timing stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.BountyTimingResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete bounty timing by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Timing"
                ],
                "summary": "Delete bounty timing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/gobounties/{id}/timing/close": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Close bounty timing by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Timing"
                ],
                "summary": "Close bounty timing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/gobounties/{id}/timing/start": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Start bounty timing by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Timing"
                ],
                "summary": "Start bounty timing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/gobounties/{pubkey}/{created}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a bounty by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties"
                ],
                "summary": "Delete a bounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PubKey",
                        "name": "pubkey",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Created",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/hivechat": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Retrieve chats for a workspace with the given ID and status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Retrieve chats for a workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chat status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new chat with the given workspace ID and title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Create a new chat",
                "parameters": [
                    {
                        "description": "Chat creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrEditChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/file/all": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "List all files in a chat with the given parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "List all files in a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "File MIME type",
                        "name": "mimeType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspaceId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListFilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/file/{id}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Retrieve a file from a chat with the given ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Retrieve a file from a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a file from a chat with the given ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Delete a file from a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/history/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Retrieve the history of a chat with the given ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Retrieve chat history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HistoryChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/response": {
            "post": {
                "description": "Process a chat response with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Process a chat response",
                "parameters": [
                    {
                        "description": "Chat response request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ProcessChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/send": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Send a message in a chat with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Send a message in a chat",
                "parameters": [
                    {
                        "description": "Send message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/send/build": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Send a build message in a chat with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Send a build message in a chat",
                "parameters": [
                    {
                        "description": "Build message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.BuildMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/upload": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Upload a file to a chat with the given details",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Upload a file to a chat",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/{chat_id}": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the title of an existing chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Update an existing chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chat update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrEditChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/hivechat/{chat_id}/archive": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Archive a chat by changing its status to archived",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hive Chat"
                ],
                "summary": "Archive an existing chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    }
                }
            }
        },
        "/invoice": {
            "post": {
                "description": "Generate an invoice for a tribe",
                "tags": [
                    "Tribes"
                ],
                "summary": "Generate an invoice",
                "parameters": [
                    {
                        "description": "Invoice request",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard/{tribe_uuid}": {
            "get": {
                "description": "Get a leaderboard for a tribe",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "tribe_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alias",
                        "name": "alias",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update a leaderboard for a tribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tribes"
                ],
                "summary": "Update a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "tribe_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Leaderboard object",
                        "name": "leaderboard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.LeaderBoard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a leaderboard for a tribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tribes"
                ],
                "summary": "Create a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "tribe_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Leaderboard object",
                        "name": "leaderboard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.LeaderBoard"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/lnauth_login": {
            "get": {
                "description": "Receive LNURL auth data and authenticate the user using LNURL-auth protocol.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Receive LNURL auth data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's public key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Unique challenge string (k1)",
                        "name": "k1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Signature of the challenge signed by the user's private key",
                        "name": "sig",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.LnAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.LnAuthResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Signature verification failed",
                        "schema": {
                            "$ref": "#/definitions/handlers.LnAuthResponse"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable: JWT creation failed",
                        "schema": {
                            "$ref": "#/definitions/handlers.LnAuthResponse"
                        }
                    }
                }
            }
        },
        "/lnurl_auth": {
            "get": {
                "description": "Generate a unique LNURL-auth challenge (k1) and encoded LNURL for authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Generate LNURL-auth data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Socket connection key to associate with the LNURL-auth challenge",
                        "name": "socketKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LNURL-auth data generated successfully",
                        "schema": {
                            "$ref": "#/definitions/auth.LnEncodeData"
                        }
                    },
                    "400": {
                        "description": "Bad request: Failed to generate LNURL-auth data",
                        "schema": {
                            "$ref": "#/definitions/auth.LnEncodeData"
                        }
                    }
                }
            }
        },
        "/meme_upload": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Upload an image for a meme",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memes"
                ],
                "summary": "Meme Image Upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Meme Image File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meme image URL",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metrics/bounties": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get bounties by date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Bounties",
                "parameters": [
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.BountyData"
                            }
                        }
                    }
                }
            }
        },
        "/metrics/bounties/count": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get the count of bounties by date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Bounties Count",
                "parameters": [
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/metrics/bounties/providers": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get bounties providers by date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Bounties Providers",
                "parameters": [
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Person"
                            }
                        }
                    }
                }
            }
        },
        "/metrics/bounty_stats": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get bounty metrics for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Bounty Metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.BountyMetrics"
                        }
                    }
                }
            }
        },
        "/metrics/csv": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Generate a CSV file for metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Generate Metrics CSV",
                "parameters": [
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CSV file URL",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/metrics/organization": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get workspace metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Workspace Metrics",
                "parameters": [
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/metrics/payment": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get payment metrics for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Payment Metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/metrics/people": {
            "post": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get people metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get People Metrics",
                "parameters": [
                    {
                        "description": "Payment Date Range",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.PaymentDateRange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/metrics/workspaces": {
            "get": {
                "security": [
                    {
                        "SuperAdminAuth": []
                    }
                ],
                "description": "Get all workspaces for admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get Admin Workspaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Workspace"
                            }
                        }
                    }
                }
            }
        },
        "/migrate_bounties": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Migrate bounties from extras to the new structure",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Others"
                ],
                "summary": "Migrate bounties",
                "responses": {
                    "200": {
                        "description": "Returns status of migration",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/people": {
            "get": {
                "description": "Get listed people",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get Listed People",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Person"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update an existing person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Update Person",
                "parameters": [
                    {
                        "description": "Person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Create Person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Referred By",
                        "name": "referred_by",
                        "in": "query"
                    },
                    {
                        "description": "Person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                }
            }
        },
        "/people/offers": {
            "get": {
                "description": "Get a list of listed offers",
                "tags": [
                    "People"
                ],
                "summary": "Get listed offers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Person"
                            }
                        }
                    }
                }
            }
        },
        "/people/wanteds/header": {
            "get": {
                "description": "Get the header information for wanteds",
                "tags": [
                    "People"
                ],
                "summary": "Get wanteds header",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WantedsHeaderResponse"
                        }
                    }
                }
            }
        },
        "/person/assets/{uuid}": {
            "get": {
                "description": "Get assets of a person by their UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get Person Assets by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.AssetListData"
                            }
                        }
                    }
                }
            }
        },
        "/person/github/{github}": {
            "get": {
                "description": "Get a person by their Github name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get Person by Github Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Github Name",
                        "name": "github",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                }
            }
        },
        "/person/id/{id}": {
            "get": {
                "description": "Get a person by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get Person by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                }
            }
        },
        "/person/login": {
            "post": {
                "security": [
                    {
                        "CypressAuth": []
                    }
                ],
                "description": "Upsert login for a person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Upsert Login",
                "parameters": [
                    {
                        "description": "Person",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT Token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/person/posts": {
            "get": {
                "description": "Get listed posts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get Listed Posts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.PeopleExtra"
                            }
                        }
                    }
                }
            }
        },
        "/person/search": {
            "get": {
                "description": "Get people by search query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get People by Search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Person"
                            }
                        }
                    }
                }
            }
        },
        "/person/short": {
            "get": {
                "description": "Get a short list of people",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get People Short List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Person"
                            }
                        }
                    }
                }
            }
        },
        "/person/uuid/{uuid}": {
            "get": {
                "description": "Get a person by their UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get Person by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a person by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Delete Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/person/{pubkey}": {
            "get": {
                "description": "Get a person by their public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get Person by Pubkey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public Key",
                        "name": "pubkey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Person"
                        }
                    }
                }
            }
        },
        "/podcast": {
            "get": {
                "description": "Get a podcast by URL or ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Get Podcast",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Feed ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/feeds.Podcast"
                        }
                    }
                }
            }
        },
        "/poll/invoice/{paymentRequest}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Poll invoice by payment request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bounties - Payment"
                ],
                "summary": "Poll invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment Request",
                        "name": "paymentRequest",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceResult"
                        }
                    }
                }
            }
        },
        "/poll/{challenge}": {
            "get": {
                "description": "Poll a challenge to verify the user's authentication and retrieve user details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Poll a challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge string",
                        "name": "challenge",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Challenge verified successfully and user details returned",
                        "schema": {
                            "$ref": "#/definitions/db.VerifyPayload"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid challenge or user not found"
                    }
                }
            }
        },
        "/refresh_jwt": {
            "get": {
                "description": "Refresh the JWT token using a valid existing token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh JWT token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Existing JWT token",
                        "name": "x-jwt",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Missing or invalid JWT token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable: Failed to create a new JWT token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/save": {
            "post": {
                "description": "Save data with a unique key in the cache.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Save data",
                "parameters": [
                    {
                        "description": "Request body containing the key and value to save",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Save"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data saved successfully",
                        "schema": {
                            "$ref": "#/definitions/db.SaveResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request: Invalid request body"
                    },
                    "401": {
                        "description": "Unauthorized: Failed to process payload"
                    },
                    "406": {
                        "description": "Not acceptable: Invalid data format"
                    }
                }
            }
        },
        "/save/{key}": {
            "get": {
                "description": "Retrieve saved data using a unique key from the cache.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Storage"
                ],
                "summary": "Retrieve saved data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique key for the saved data",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/db.Save"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid key or data not found"
                    }
                }
            }
        },
        "/search/bots/{query}": {
            "get": {
                "description": "Search for bots",
                "tags": [
                    "Bots"
                ],
                "summary": "Search bots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Bot"
                            }
                        }
                    }
                }
            }
        },
        "/search_podcast_episodes": {
            "get": {
                "description": "Search for podcast episodes by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Search Podcast Episodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/feeds.Item"
                            }
                        }
                    }
                }
            }
        },
        "/search_podcasts": {
            "get": {
                "description": "Search for podcasts by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Search Podcasts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/feeds.Feed"
                            }
                        }
                    }
                }
            }
        },
        "/search_youtube": {
            "get": {
                "description": "Search for Youtube videos by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Search Youtube",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/feeds.Feed"
                            }
                        }
                    }
                }
            }
        },
        "/search_youtube_videos": {
            "get": {
                "description": "Search for Youtube videos by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Search Youtube Videos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/feeds.Item"
                            }
                        }
                    }
                }
            }
        },
        "/snippet/create": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a new snippet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snippets"
                ],
                "summary": "Create Snippet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Snippet Request",
                        "name": "snippet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SnippetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.TextSnippet"
                        }
                    }
                }
            }
        },
        "/snippet/workspace/{workspace_uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get snippets by workspace UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snippets"
                ],
                "summary": "Get Snippets by Workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TextSnippet"
                            }
                        }
                    }
                }
            }
        },
        "/snippet/{id}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a snippet by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snippets"
                ],
                "summary": "Get Snippet by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TextSnippet"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update an existing snippet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snippets"
                ],
                "summary": "Update Snippet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Snippet Request",
                        "name": "snippet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SnippetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.TextSnippet"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a snippet by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snippets"
                ],
                "summary": "Delete Snippet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Snippet deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ticket/{pubKey}/{created}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a ticket by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Delete Ticket by Admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Public Key",
                        "name": "pubKey",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Created Timestamp",
                        "name": "created",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tribe": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a tribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tribes"
                ],
                "summary": "Create or edit a tribe",
                "parameters": [
                    {
                        "description": "Tribe object",
                        "name": "tribe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Tribe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Tribe"
                        }
                    }
                }
            }
        },
        "/tribe/{uuid}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a tribe by UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tribes"
                ],
                "summary": "Delete a tribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/tribe_by_feed": {
            "get": {
                "description": "Get the first tribe by feed URL",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get the first tribe by feed URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Feed URL",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tribe_by_un/{un}": {
            "get": {
                "description": "Get a tribe by unique name",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get a tribe by unique name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique name",
                        "name": "un",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tribeactivity/{uuid}": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the activity of a tribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tribes"
                ],
                "summary": "Update tribe activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/tribepreview/{uuid}": {
            "put": {
                "description": "Set the preview of a tribe",
                "tags": [
                    "Tribes"
                ],
                "summary": "Set tribe preview",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Preview URL",
                        "name": "preview",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/tribes": {
            "get": {
                "description": "Get a list of listed tribes",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get listed tribes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Tribe"
                            }
                        }
                    }
                }
            }
        },
        "/tribes/app_url/{app_url}": {
            "get": {
                "description": "Get a list of tribes by app URL",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get tribes by app URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App URL",
                        "name": "app_url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Tribe"
                            }
                        }
                    }
                }
            }
        },
        "/tribes/apps_urls/{app_urls}": {
            "get": {
                "description": "Get a list of tribes by multiple app URLs",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get tribes by multiple app URLs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of app URLs",
                        "name": "app_urls",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/db.Tribe"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tribes/budget_invoice": {
            "post": {
                "description": "Generate a budget invoice for a tribe",
                "tags": [
                    "Tribes"
                ],
                "summary": "Generate a budget invoice",
                "parameters": [
                    {
                        "description": "Budget invoice request",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.BudgetInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceResponse"
                        }
                    }
                }
            }
        },
        "/tribes/invoice": {
            "post": {
                "description": "Generate an invoice for a tribe",
                "tags": [
                    "Tribes"
                ],
                "summary": "Generate an invoice",
                "parameters": [
                    {
                        "description": "Invoice request",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceResponse"
                        }
                    }
                }
            }
        },
        "/tribes/total": {
            "get": {
                "description": "Get the total number of tribes",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get total number of tribes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/tribes/unique_name": {
            "get": {
                "description": "Get unique name from tribe name",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get unique name from tribe name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tribes/{uuid}": {
            "get": {
                "description": "Get a tribe by UUID",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get a tribe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tribe UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tribes_by_owner/{pubkey}": {
            "get": {
                "description": "Get a list of tribes by owner public key",
                "tags": [
                    "Tribes"
                ],
                "summary": "Get tribes by owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner public key",
                        "name": "pubkey",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Include all tribes",
                        "name": "all",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Tribe"
                            }
                        }
                    }
                }
            }
        },
        "/tribestats": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update the stats of a tribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tribes"
                ],
                "summary": "Update tribe stats",
                "parameters": [
                    {
                        "description": "Tribe object",
                        "name": "tribe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Tribe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/verify/{challenge}": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Verify a challenge by validating the signature and storing the result in the cache.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify a challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge string",
                        "name": "challenge",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body containing the public key and signature",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.VerifyPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Challenge verified successfully",
                        "schema": {
                            "$ref": "#/definitions/db.VerifyPayload"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Challenge not found or invalid signature",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "Not acceptable: Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/workflows/request": {
            "post": {
                "description": "Handle a workflow request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workflows"
                ],
                "summary": "Handle Workflow Request",
                "parameters": [
                    {
                        "description": "Workflow Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.WfRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/workflows/response": {
            "post": {
                "description": "Handle a workflow response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workflows"
                ],
                "summary": "Handle Workflow Response",
                "parameters": [
                    {
                        "description": "Workflow Response",
                        "name": "response",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateWorkflowRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/workspace": {
            "get": {
                "description": "Get all workspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Workspace"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create or Edit Workspace",
                "parameters": [
                    {
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                }
            }
        },
        "/workspace/bounties/{uuid}": {
            "get": {
                "description": "Get bounties of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Bounties"
                ],
                "summary": "Get Workspace Bounties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.BountyResponse"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/bounties/{uuid}/count": {
            "get": {
                "description": "Get the count of bounties in a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Bounties"
                ],
                "summary": "Get Workspace Bounties Count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/workspace/bounty/roles": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get all bounty roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Bounties"
                ],
                "summary": "Get Bounty Roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.BountyRoles"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/budget/history/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the budget history of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Get Workspace Budget History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.BudgetHistoryData"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/budget/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the budget of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Get Workspace Budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.StatusBudget"
                        }
                    }
                }
            }
        },
        "/workspace/codegraph": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a code graph for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Code Graph"
                ],
                "summary": "Create or Edit Workspace Code Graph",
                "parameters": [
                    {
                        "description": "Workspace Code Graph",
                        "name": "codeGraph",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceCodeGraph"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceCodeGraph"
                        }
                    }
                }
            }
        },
        "/workspace/codegraph/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a code graph of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Code Graph"
                ],
                "summary": "Get Workspace Code Graph by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code Graph UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceCodeGraph"
                        }
                    }
                }
            }
        },
        "/workspace/count": {
            "get": {
                "description": "Get the count of all workspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspaces Count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/workspace/delete/{uuid}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete Workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                }
            }
        },
        "/workspace/foruser/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a user of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Get Workspace User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceUsers"
                        }
                    }
                }
            }
        },
        "/workspace/invoices/count/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the count of invoices in a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Get Invoices Count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/workspace/mission": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update Workspace",
                "parameters": [
                    {
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                }
            }
        },
        "/workspace/payments/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the payment history of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Get Payment History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.PaymentHistoryData"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/poll/invoices/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Poll budget invoices of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Poll Budget Invoices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Polled invoices",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/workspace/poll/user/invoices": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Poll budget invoices of all workspaces of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Poll User Workspaces Budget",
                "responses": {
                    "200": {
                        "description": "Polled user workspace invoices",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/workspace/repositories": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create or edit a repository for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Repositories"
                ],
                "summary": "Create or Edit Workspace Repository",
                "parameters": [
                    {
                        "description": "Workspace Repository",
                        "name": "workspaceRepo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceRepositories"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceRepositories"
                        }
                    }
                }
            }
        },
        "/workspace/repositories/{uuid}": {
            "get": {
                "description": "Get repositories of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Repositories"
                ],
                "summary": "Get Workspace Repositories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.WorkspaceRepositories"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/repository/{uuid}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get a repository of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Repositories"
                ],
                "summary": "Get Workspace Repository by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceRepositories"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a repository from a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Repositories"
                ],
                "summary": "Delete Workspace Repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Repository deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/workspace/schematicurl": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update Workspace",
                "parameters": [
                    {
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                }
            }
        },
        "/workspace/tactics": {
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update Workspace",
                "parameters": [
                    {
                        "description": "Workspace",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                }
            }
        },
        "/workspace/user/dropdown/{userId}": {
            "get": {
                "description": "Get dropdown workspaces of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Get User Dropdown Workspaces",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Workspace"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/user/invoices/count": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the count of all invoices of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Get All User Invoices Count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/workspace/user/{userId}": {
            "get": {
                "description": "Get workspaces of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Get User Workspaces",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Workspace"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/users/role/{uuid}/{user}": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get roles of a user in a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Get User Roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User PubKey",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.WorkspaceUserRoles"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Add roles to a user in a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Add User Roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User PubKey",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Workspace User Roles",
                        "name": "roles",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceUserRoles"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.WorkspaceUserRoles"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/users/{uuid}": {
            "get": {
                "description": "Get users of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Get Workspace Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.WorkspaceUsers"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Create a user for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Create Workspace User",
                "parameters": [
                    {
                        "description": "Workspace User",
                        "name": "workspaceUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceUsers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceUsers"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a user from a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Delete Workspace User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Workspace User Data",
                        "name": "workspaceUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceUsersData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.WorkspaceUsersData"
                        }
                    }
                }
            }
        },
        "/workspace/users/{uuid}/count": {
            "get": {
                "description": "Get the count of users in a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Users"
                ],
                "summary": "Get Workspace Users Count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/workspace/{uuid}": {
            "get": {
                "description": "Get a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Workspace by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Workspace"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_uuid}/codegraph": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get code graphs of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Code Graph"
                ],
                "summary": "Get Code Graph by Workspace UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.WorkspaceCodeGraph"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_uuid}/codegraph/{uuid}": {
            "delete": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Delete a code graph from a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Code Graph"
                ],
                "summary": "Delete Workspace Code Graph",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Code Graph UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Code graph deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_uuid}/features": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get features of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get Features by Workspace UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.WorkspaceFeatures"
                            }
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_uuid}/lastwithdrawal": {
            "get": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Get the last withdrawal of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Get Last Withdrawal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hours since last withdrawal",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_uuid}/payments": {
            "put": {
                "security": [
                    {
                        "PubKeyContextAuth": []
                    }
                ],
                "description": "Update pending payments of a workspace by its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace -  Payments"
                ],
                "summary": "Update Workspace Pending Payments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace UUID",
                        "name": "workspace_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Payments Successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/youtube_videos": {
            "get": {
                "description": "Get Youtube videos for a specific channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feeds"
                ],
                "summary": "Get Youtube Videos for Channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "channelId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/feeds.Item"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LnEncodeData": {
            "type": "object",
            "properties": {
                "encode": {
                    "type": "string"
                },
                "k1": {
                    "type": "string"
                }
            }
        },
        "db.Activity": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author": {
                    "$ref": "#/definitions/db.AuthorType"
                },
                "author_ref": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "content_type": {
                    "$ref": "#/definitions/db.ContentType"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sequence": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "thread_id": {
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            }
        },
        "db.AssetListData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "asset": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                },
                "creator": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "db.Author": {
            "type": "string",
            "enum": [
                "HUMAN",
                "AGENT"
            ],
            "x-enum-varnames": [
                "HumanAuthor",
                "AgentAuthor"
            ]
        },
        "db.AuthorType": {
            "type": "string",
            "enum": [
                "human",
                "hive"
            ],
            "x-enum-varnames": [
                "HumansAuthor",
                "HiveAuthor"
            ]
        },
        "db.BadgeCreationData": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "badge": {
                    "type": "string"
                },
                "tribeId": {
                    "type": "string"
                }
            }
        },
        "db.Bot": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "member_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_alias": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "owner_route_hint": {
                    "type": "string"
                },
                "price_per_use": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tsv": {
                    "type": "string"
                },
                "unique_name": {
                    "type": "string"
                },
                "unlisted": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.Bounty": {
            "type": "object",
            "properties": {
                "assigned_date": {
                    "type": "string"
                },
                "assigned_hours": {
                    "type": "integer"
                },
                "assignee": {
                    "type": "string"
                },
                "award": {
                    "type": "string"
                },
                "bounty_expires": {
                    "type": "string"
                },
                "coding_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "commitment_fee": {
                    "type": "integer"
                },
                "completed": {
                    "type": "boolean"
                },
                "completion_date": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "deliverables": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "estimated_completion_date": {
                    "type": "string"
                },
                "estimated_session_length": {
                    "type": "string"
                },
                "github_description": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "mark_as_paid_date": {
                    "type": "string"
                },
                "one_sentence_summary": {
                    "type": "string"
                },
                "org_uuid": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "paid": {
                    "type": "boolean"
                },
                "paid_date": {
                    "type": "string"
                },
                "payment_failed": {
                    "type": "boolean"
                },
                "payment_pending": {
                    "type": "boolean"
                },
                "phase_priority": {
                    "type": "integer"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "show": {
                    "type": "boolean"
                },
                "ticket_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tribe": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "wanted_type": {
                    "type": "string"
                }
            }
        },
        "db.BountyCard": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "string"
                },
                "assignee_img": {
                    "type": "string"
                },
                "assignee_name": {
                    "type": "string"
                },
                "features": {
                    "$ref": "#/definitions/db.WorkspaceFeatures"
                },
                "id": {
                    "type": "integer"
                },
                "phase": {
                    "$ref": "#/definitions/db.FeaturePhase"
                },
                "status": {
                    "$ref": "#/definitions/db.BountyStatus"
                },
                "ticket_group": {
                    "type": "string"
                },
                "ticket_uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "workspace": {
                    "$ref": "#/definitions/db.Workspace"
                }
            }
        },
        "db.BountyData": {
            "type": "object",
            "properties": {
                "assigned_date": {
                    "type": "string"
                },
                "assigned_hours": {
                    "type": "integer"
                },
                "assignee": {
                    "type": "string"
                },
                "assignee_alias": {
                    "type": "string"
                },
                "assignee_created": {
                    "type": "string"
                },
                "assignee_description": {
                    "type": "string"
                },
                "assignee_id": {
                    "type": "integer"
                },
                "assignee_img": {
                    "type": "string"
                },
                "assignee_route_hint": {
                    "type": "string"
                },
                "assignee_updated": {
                    "type": "string"
                },
                "award": {
                    "type": "string"
                },
                "bounty_created": {
                    "type": "integer"
                },
                "bounty_description": {
                    "type": "string"
                },
                "bounty_expires": {
                    "type": "string"
                },
                "bounty_id": {
                    "type": "integer"
                },
                "bounty_owner_id": {
                    "type": "integer"
                },
                "bounty_updated": {
                    "type": "string"
                },
                "coding_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "commitment_fee": {
                    "type": "integer"
                },
                "completed": {
                    "type": "boolean"
                },
                "completion_date": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deliverables": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "estimated_completion_date": {
                    "type": "string"
                },
                "estimated_session_length": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "github_description": {
                    "type": "boolean"
                },
                "github_issues": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "last_login": {
                    "type": "integer"
                },
                "mark_as_paid_date": {
                    "type": "string"
                },
                "new_ticket_time": {
                    "type": "integer"
                },
                "one_sentence_summary": {
                    "type": "string"
                },
                "org_uuid": {
                    "type": "string"
                },
                "organization_img": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "organization_uuid": {
                    "type": "string"
                },
                "owner_alias": {
                    "type": "string"
                },
                "owner_contact_key": {
                    "type": "string"
                },
                "owner_created": {
                    "type": "string"
                },
                "owner_description": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "owner_img": {
                    "type": "string"
                },
                "owner_key": {
                    "type": "string"
                },
                "owner_last_login": {
                    "type": "integer"
                },
                "owner_price_to_meet": {
                    "type": "integer"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "owner_route_hint": {
                    "type": "string"
                },
                "owner_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "owner_twitter_confirmed": {
                    "type": "boolean"
                },
                "owner_unique_name": {
                    "type": "string"
                },
                "owner_updated": {
                    "type": "string"
                },
                "owner_uuid": {
                    "type": "string"
                },
                "paid": {
                    "type": "boolean"
                },
                "paid_date": {
                    "type": "string"
                },
                "payment_failed": {
                    "type": "boolean"
                },
                "payment_pending": {
                    "type": "boolean"
                },
                "phase_priority": {
                    "type": "integer"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "pow": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "price_to_meet": {
                    "type": "integer"
                },
                "referred_by": {
                    "type": "integer"
                },
                "show": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ticket_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tribe": {
                    "type": "string"
                },
                "twitter_confirmed": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "unique_name": {
                    "type": "string"
                },
                "unlisted": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "wanted_type": {
                    "type": "string"
                },
                "workspace_description": {
                    "type": "string"
                },
                "workspace_img": {
                    "type": "string"
                },
                "workspace_name": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.BountyMetrics": {
            "type": "object",
            "properties": {
                "average_completed": {
                    "type": "integer"
                },
                "average_paid": {
                    "type": "integer"
                },
                "bounties_assigned": {
                    "type": "integer"
                },
                "bounties_paid": {
                    "type": "integer"
                },
                "bounties_paid_average": {
                    "type": "integer"
                },
                "bounties_posted": {
                    "type": "integer"
                },
                "new_hunters": {
                    "type": "integer"
                },
                "new_hunters_by_period": {
                    "type": "integer"
                },
                "new_hunters_paid": {
                    "type": "integer"
                },
                "sats_paid": {
                    "type": "integer"
                },
                "sats_paid_percentage": {
                    "type": "integer"
                },
                "sats_posted": {
                    "type": "integer"
                },
                "unique_hunters_paid": {
                    "type": "integer"
                }
            }
        },
        "db.BountyResponse": {
            "type": "object",
            "properties": {
                "assignee": {
                    "$ref": "#/definitions/db.Person"
                },
                "bounty": {
                    "$ref": "#/definitions/db.NewBounty"
                },
                "organization": {
                    "$ref": "#/definitions/db.WorkspaceShort"
                },
                "owner": {
                    "$ref": "#/definitions/db.Person"
                },
                "pow": {
                    "type": "integer"
                },
                "proofs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.ProofOfWork"
                    }
                },
                "workspace": {
                    "$ref": "#/definitions/db.WorkspaceShort"
                }
            }
        },
        "db.BountyRoles": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "db.BountyStatus": {
            "type": "string",
            "enum": [
                "TODO",
                "IN_PROGRESS",
                "IN_REVIEW",
                "COMPLETED",
                "PAID",
                "DRAFT"
            ],
            "x-enum-varnames": [
                "StatusTodo",
                "StatusInProgress",
                "StatusInReview",
                "StatusComplete",
                "StatusPaid",
                "StatusDraft"
            ]
        },
        "db.BudgetHistoryData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "org_uuid": {
                    "type": "string"
                },
                "payment_type": {
                    "$ref": "#/definitions/db.PaymentType"
                },
                "sender_name": {
                    "type": "string"
                },
                "sender_pubkey": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "db.BudgetInvoiceRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "org_uuid": {
                    "type": "string"
                },
                "payment_type": {
                    "$ref": "#/definitions/db.PaymentType"
                },
                "sender_pubkey": {
                    "type": "string"
                },
                "websocket_token": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.Category": {
            "type": "string",
            "enum": [
                "Web development",
                "Backend development",
                "Design",
                "Other"
            ],
            "x-enum-varnames": [
                "WebDevelopment",
                "BackendDevelopment",
                "Design",
                "Other"
            ]
        },
        "db.Channel": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tribe_uuid": {
                    "type": "string"
                }
            }
        },
        "db.ConnectionCodesList": {
            "type": "object",
            "properties": {
                "connection_string": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_used": {
                    "type": "boolean"
                },
                "pubkey": {
                    "type": "string"
                },
                "route_hint": {
                    "type": "string"
                },
                "sats_amount": {
                    "type": "integer"
                }
            }
        },
        "db.ConnectionCodesShort": {
            "type": "object",
            "properties": {
                "connection_string": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                }
            }
        },
        "db.ContentType": {
            "type": "string",
            "enum": [
                "feature_creation",
                "story_update",
                "requirement_change",
                "general_update"
            ],
            "x-enum-varnames": [
                "FeatureCreation",
                "StoryUpdate",
                "RequirementChange",
                "GeneralUpdate"
            ]
        },
        "db.DeleteBountyAssignee": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                }
            }
        },
        "db.FeatureOutput": {
            "type": "object",
            "properties": {
                "featureContext": {
                    "type": "string"
                },
                "featureUuid": {
                    "type": "string"
                },
                "sourceWebsocketId": {
                    "type": "string"
                },
                "stories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.FeatureStories"
                    }
                }
            }
        },
        "db.FeaturePhase": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phase_design": {
                    "type": "string"
                },
                "phase_outcome": {
                    "type": "string"
                },
                "phase_purpose": {
                    "type": "string"
                },
                "phase_scope": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "updated": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.FeatureStatus": {
            "type": "string",
            "enum": [
                "active",
                "archived"
            ],
            "x-enum-varnames": [
                "ActiveFeature",
                "ArchivedFeature"
            ]
        },
        "db.FeatureStories": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "integer"
                },
                "rationale": {
                    "type": "string"
                },
                "userStory": {
                    "type": "string"
                }
            }
        },
        "db.FeatureStoriesReponse": {
            "type": "object",
            "properties": {
                "output": {
                    "$ref": "#/definitions/db.FeatureOutput"
                }
            }
        },
        "db.FeatureStory": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "updated": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.FeaturedBounty": {
            "type": "object",
            "properties": {
                "addedAt": {
                    "type": "integer"
                },
                "bountyId": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "db.FileAsset": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "fileHash": {
                    "type": "string"
                },
                "fileSize": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lastReferenced": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "originFilename": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.FileStatus"
                },
                "storagePath": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uploadFilename": {
                    "type": "string"
                },
                "uploadTime": {
                    "type": "string"
                },
                "uploadedBy": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            }
        },
        "db.FileStatus": {
            "type": "string",
            "enum": [
                "active",
                "archived",
                "deleted"
            ],
            "x-enum-varnames": [
                "ActiveFileStatus",
                "ArchivedFileStatus",
                "DeletedFileStatus"
            ]
        },
        "db.FilterStatusCount": {
            "type": "object",
            "properties": {
                "assigned": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                },
                "open": {
                    "type": "integer"
                },
                "paid": {
                    "type": "integer"
                },
                "pending": {
                    "type": "integer"
                }
            }
        },
        "db.GithubIssue": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.InviteBody": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer"
                },
                "pubkey": {
                    "type": "string"
                },
                "route_hint": {
                    "type": "string"
                },
                "sats_amount": {
                    "type": "integer"
                }
            }
        },
        "db.Invoice": {
            "type": "object",
            "properties": {
                "invoice": {
                    "type": "string"
                }
            }
        },
        "db.InvoiceCheckResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "payment_hash": {
                    "type": "string"
                },
                "payment_request": {
                    "type": "string"
                },
                "preimage": {
                    "type": "string"
                },
                "settled": {
                    "type": "boolean"
                }
            }
        },
        "db.InvoicePaySuccess": {
            "type": "object",
            "properties": {
                "response": {
                    "$ref": "#/definitions/db.InvoiceCheckResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "db.InvoiceRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "assigned_hours": {
                    "type": "integer"
                },
                "bounty_expires": {
                    "type": "string"
                },
                "commitment_fee": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "memo": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "route_hint": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_pubkey": {
                    "type": "string"
                },
                "websocket_token": {
                    "type": "string"
                }
            }
        },
        "db.InvoiceResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "$ref": "#/definitions/db.Invoice"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "db.InvoiceResult": {
            "type": "object",
            "properties": {
                "response": {
                    "$ref": "#/definitions/db.InvoiceCheckResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "db.LeaderBoard": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "earned": {
                    "type": "integer"
                },
                "reputation": {
                    "type": "integer"
                },
                "spent": {
                    "type": "integer"
                },
                "tribe_uuid": {
                    "type": "string"
                }
            }
        },
        "db.LeaderData": {
            "type": "object",
            "additionalProperties": true
        },
        "db.NewBounty": {
            "type": "object",
            "properties": {
                "assigned_date": {
                    "type": "string"
                },
                "assigned_hours": {
                    "type": "integer"
                },
                "assignee": {
                    "type": "string"
                },
                "award": {
                    "type": "string"
                },
                "bounty_expires": {
                    "type": "string"
                },
                "coding_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "commitment_fee": {
                    "type": "integer"
                },
                "completed": {
                    "type": "boolean"
                },
                "completion_date": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "deliverables": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "estimated_completion_date": {
                    "type": "string"
                },
                "estimated_session_length": {
                    "type": "string"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "github_description": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "mark_as_paid_date": {
                    "type": "string"
                },
                "one_sentence_summary": {
                    "type": "string"
                },
                "org_uuid": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "paid": {
                    "type": "boolean"
                },
                "paid_date": {
                    "type": "string"
                },
                "payment_failed": {
                    "type": "boolean"
                },
                "payment_pending": {
                    "type": "boolean"
                },
                "phase_priority": {
                    "type": "integer"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "pow": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "show": {
                    "type": "boolean"
                },
                "ticket_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tribe": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "wanted_type": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.NewPaymentHistory": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "bounty_id": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "org_uuid": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                },
                "payment_type": {
                    "$ref": "#/definitions/db.PaymentType"
                },
                "receiver_pubkey": {
                    "type": "string"
                },
                "sender_pubkey": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.NewWithdrawBudgetRequest": {
            "type": "object",
            "properties": {
                "payment_request": {
                    "type": "string"
                },
                "websocket_token": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.Node": {
            "type": "object",
            "properties": {
                "node_data": {
                    "$ref": "#/definitions/db.NodeData"
                },
                "node_type": {
                    "type": "string"
                }
            }
        },
        "db.NodeData": {
            "type": "object",
            "properties": {
                "bounty_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.NodeListResponse": {
            "type": "object",
            "properties": {
                "node_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Node"
                    }
                }
            }
        },
        "db.PaymentDateRange": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "payment_type": {
                    "$ref": "#/definitions/db.PaymentType"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "db.PaymentHistoryData": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "bounty_id": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "org_uuid": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                },
                "payment_type": {
                    "$ref": "#/definitions/db.PaymentType"
                },
                "receiver_img": {
                    "type": "string"
                },
                "receiver_name": {
                    "type": "string"
                },
                "receiver_pubkey": {
                    "type": "string"
                },
                "sender_img": {
                    "type": "string"
                },
                "sender_name": {
                    "type": "string"
                },
                "sender_pubkey": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "tag": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.PaymentType": {
            "type": "string",
            "enum": [
                "deposit",
                "withdraw",
                "payment",
                "reversal"
            ],
            "x-enum-varnames": [
                "Deposit",
                "Withdraw",
                "Payment",
                "Reversal"
            ]
        },
        "db.PeopleExtra": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "person": {
                    "type": "string"
                }
            }
        },
        "db.Person": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "github_issues": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "last_login": {
                    "type": "integer"
                },
                "new_ticket_time": {
                    "type": "integer"
                },
                "owner_alias": {
                    "type": "string"
                },
                "owner_contact_key": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "owner_route_hint": {
                    "type": "string"
                },
                "price_to_meet": {
                    "type": "integer"
                },
                "referred_by": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "twitter_confirmed": {
                    "type": "boolean"
                },
                "unique_name": {
                    "type": "string"
                },
                "unlisted": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.PersonInShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "owner_alias": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "unique_name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.PhasePlan": {
            "type": "object",
            "properties": {
                "phaseApproach": {
                    "type": "string"
                },
                "stubTickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.StubTicket"
                    }
                }
            }
        },
        "db.PlanStatus": {
            "type": "string",
            "enum": [
                "DRAFT",
                "APPROVED"
            ],
            "x-enum-varnames": [
                "DraftPlan",
                "ApprovedPlan"
            ]
        },
        "db.ProofOfWork": {
            "type": "object",
            "properties": {
                "bounty_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.ProofOfWorkStatus"
                },
                "submitted_at": {
                    "type": "string"
                }
            }
        },
        "db.ProofOfWorkStatus": {
            "type": "string",
            "enum": [
                "New",
                "Accepted",
                "Rejected",
                "Change Requested"
            ],
            "x-enum-varnames": [
                "NewStatus",
                "AcceptedStatus",
                "RejectedStatus",
                "ChangeRequestedStatus"
            ]
        },
        "db.PropertyMap": {
            "type": "object",
            "additionalProperties": true
        },
        "db.QuickBountiesResponse": {
            "type": "object",
            "properties": {
                "featureID": {
                    "type": "string"
                },
                "phases": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/db.QuickBountyItem"
                        }
                    }
                },
                "unphased": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.QuickBountyItem"
                    }
                }
            }
        },
        "db.QuickBountyItem": {
            "type": "object",
            "properties": {
                "assignedAlias": {
                    "type": "string"
                },
                "bountyID": {
                    "type": "integer"
                },
                "bountyTitle": {
                    "type": "string"
                },
                "phaseID": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.BountyStatus"
                }
            }
        },
        "db.QuickTicketItem": {
            "type": "object",
            "properties": {
                "assignedAlias": {
                    "type": "string"
                },
                "phaseID": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.BountyStatus"
                },
                "ticketTitle": {
                    "type": "string"
                },
                "ticketUUID": {
                    "type": "string"
                }
            }
        },
        "db.QuickTicketsResponse": {
            "type": "object",
            "properties": {
                "featureID": {
                    "type": "string"
                },
                "phases": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/db.QuickTicketItem"
                        }
                    }
                },
                "unphased": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.QuickTicketItem"
                    }
                }
            }
        },
        "db.Save": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "db.SaveResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "db.StatusBudget": {
            "type": "object",
            "properties": {
                "assigned_budget": {
                    "type": "integer"
                },
                "assigned_count": {
                    "type": "integer"
                },
                "assigned_difference": {
                    "type": "integer"
                },
                "completed_budget": {
                    "type": "integer"
                },
                "completed_count": {
                    "type": "integer"
                },
                "completed_difference": {
                    "type": "integer"
                },
                "current_budget": {
                    "type": "integer"
                },
                "open_budget": {
                    "type": "integer"
                },
                "open_count": {
                    "type": "integer"
                },
                "open_difference": {
                    "type": "integer"
                },
                "org_uuid": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.StubTicket": {
            "type": "object",
            "properties": {
                "reasoning": {
                    "type": "string"
                },
                "ticketDescription": {
                    "type": "string"
                },
                "ticketName": {
                    "type": "string"
                }
            }
        },
        "db.TextSnippet": {
            "type": "object",
            "properties": {
                "date_created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_edited": {
                    "type": "string"
                },
                "snippet": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.TicketPlan": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featurePhase": {
                    "$ref": "#/definitions/db.FeaturePhase"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "features": {
                    "$ref": "#/definitions/db.WorkspaceFeatures"
                },
                "name": {
                    "type": "string"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.PlanStatus"
                },
                "ticket_groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.TicketPlanReviewRequest": {
            "type": "object",
            "properties": {
                "requestUUID": {
                    "type": "string"
                },
                "sourceWebsocket": {
                    "type": "string"
                },
                "value": {
                    "type": "object",
                    "properties": {
                        "featureUUID": {
                            "type": "string"
                        },
                        "phasePlan": {
                            "$ref": "#/definitions/db.PhasePlan"
                        },
                        "phaseUUID": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "db.TicketPlanReviewResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "db.TicketStatus": {
            "type": "string",
            "enum": [
                "DRAFT",
                "READY",
                "IN_PROGRESS",
                "TEST",
                "DEPLOY",
                "PAY",
                "COMPLETED"
            ],
            "x-enum-varnames": [
                "DraftTicket",
                "ReadyTicket",
                "InProgressTicket",
                "TestTicket",
                "DeployTicket",
                "PayTicket",
                "CompletedTicket"
            ]
        },
        "db.Tickets": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "author": {
                    "$ref": "#/definitions/db.Author"
                },
                "author_id": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/db.Category"
                },
                "created_at": {
                    "type": "string"
                },
                "dependency": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "featurePhase": {
                    "$ref": "#/definitions/db.FeaturePhase"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "features": {
                    "$ref": "#/definitions/db.WorkspaceFeatures"
                },
                "name": {
                    "type": "string"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/db.TicketStatus"
                },
                "ticket_group": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.Tribe": {
            "type": "object",
            "properties": {
                "app_url": {
                    "type": "string"
                },
                "badges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bots": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "escrow_amount": {
                    "type": "integer"
                },
                "escrow_millis": {
                    "type": "integer"
                },
                "feed_type": {
                    "type": "integer"
                },
                "feed_url": {
                    "type": "string"
                },
                "group_key": {
                    "type": "string"
                },
                "img": {
                    "type": "string"
                },
                "last_active": {
                    "type": "integer"
                },
                "member_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_alias": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "owner_route_hint": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "price_per_message": {
                    "type": "integer"
                },
                "price_to_join": {
                    "type": "integer"
                },
                "private": {
                    "type": "boolean"
                },
                "profile_filters": {
                    "description": "\"twitter,github\"",
                    "type": "string"
                },
                "second_brain_url": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "unique_name": {
                    "type": "string"
                },
                "unlisted": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.VerifyPayload": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "contact_key": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extras": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "integer"
                },
                "jwt": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "price_to_meet": {
                    "type": "integer"
                },
                "pubkey": {
                    "type": "string"
                },
                "route_hint": {
                    "type": "string"
                },
                "tribe_jwt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "verification_signature": {
                    "type": "string"
                }
            }
        },
        "db.WfRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "project_id": {
                    "type": "string"
                },
                "request_data": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "request_id": {
                    "type": "string"
                },
                "response_data": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.WfRequestStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "workflow_id": {
                    "type": "string"
                }
            }
        },
        "db.WfRequestStatus": {
            "type": "string",
            "enum": [
                "NEW",
                "PENDING",
                "COMPLETED",
                "FAILED"
            ],
            "x-enum-varnames": [
                "StatusNew",
                "StatusPending",
                "StatusCompleted",
                "StatusFailed"
            ]
        },
        "db.Workspace": {
            "type": "object",
            "properties": {
                "bounty_count": {
                    "type": "integer"
                },
                "budget": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "maxLength": 120
                },
                "github": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "mission": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "schematic_img": {
                    "type": "string"
                },
                "schematic_url": {
                    "type": "string"
                },
                "show": {
                    "type": "boolean"
                },
                "tactics": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "db.WorkspaceCodeGraph": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "secret_alias": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.WorkspaceFeatures": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "bounties_count_assigned": {
                    "type": "integer"
                },
                "bounties_count_completed": {
                    "type": "integer"
                },
                "bounties_count_open": {
                    "type": "integer"
                },
                "brief": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "feat_status": {
                    "$ref": "#/definitions/db.FeatureStatus"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "requirements": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.WorkspaceRepositories": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.WorkspaceShort": {
            "type": "object",
            "properties": {
                "img": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.WorkspaceUserRoles": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "org_uuid": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.WorkspaceUsers": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "org_uuid": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.WorkspaceUsersData": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "extras": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "github_issues": {
                    "$ref": "#/definitions/db.PropertyMap"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "last_login": {
                    "type": "integer"
                },
                "new_ticket_time": {
                    "type": "integer"
                },
                "org_uuid": {
                    "type": "string"
                },
                "owner_alias": {
                    "type": "string"
                },
                "owner_contact_key": {
                    "type": "string"
                },
                "owner_pubkey": {
                    "type": "string"
                },
                "owner_route_hint": {
                    "type": "string"
                },
                "price_to_meet": {
                    "type": "integer"
                },
                "referred_by": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "twitter_confirmed": {
                    "type": "boolean"
                },
                "unique_name": {
                    "type": "string"
                },
                "unlisted": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                },
                "user_created": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "workspace_uuid": {
                    "type": "string"
                }
            }
        },
        "db.YoutubeDownload": {
            "type": "object",
            "properties": {
                "youtube_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "feeds.Destination": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "customKey": {
                    "type": "string"
                },
                "customValue": {
                    "type": "string"
                },
                "split": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "feeds.Episode": {
            "type": "object",
            "properties": {
                "datePublished": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "enclosureLength": {
                    "type": "integer"
                },
                "enclosureType": {
                    "type": "string"
                },
                "enclosureUrl": {
                    "type": "string"
                },
                "feedId": {
                    "type": "integer"
                },
                "feedUrl": {
                    "description": "for search",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "feeds.Feed": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "datePublished": {
                    "type": "integer"
                },
                "dateUpdated": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "feedType": {
                    "description": "podcast, video, blog",
                    "type": "integer"
                },
                "generator": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "itemId": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/feeds.Item"
                    }
                },
                "language": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "ownerUrl": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/feeds.Value"
                }
            }
        },
        "feeds.Item": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "datePublished": {
                    "type": "integer"
                },
                "dateUpdated": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "enclosureType": {
                    "type": "string"
                },
                "enclosureUrl": {
                    "type": "string"
                },
                "feedId": {
                    "description": "for search",
                    "type": "string"
                },
                "feedType": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "thumbnailUrl": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "feeds.Model": {
            "type": "object",
            "properties": {
                "suggested": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "feeds.Podcast": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "episodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/feeds.Episode"
                    }
                },
                "generator": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "lastUpdateTime": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/feeds.Value"
                }
            }
        },
        "feeds.Value": {
            "type": "object",
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/feeds.Destination"
                    }
                },
                "model": {
                    "$ref": "#/definitions/feeds.Model"
                }
            }
        },
        "handlers.ActivitiesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Activity"
                    }
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.ActivityContentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "handlers.ActivityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/db.Activity"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.ActivityThreadResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Activity"
                    }
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.AddFeatureFlagEndpointRequest": {
            "type": "object",
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.BountyTimingResponse": {
            "type": "object",
            "properties": {
                "accumulated_pause_seconds": {
                    "type": "integer"
                },
                "closed_at": {
                    "type": "string"
                },
                "first_assigned_at": {
                    "type": "string"
                },
                "is_paused": {
                    "type": "boolean"
                },
                "last_paused_at": {
                    "type": "string"
                },
                "last_pow_at": {
                    "type": "string"
                },
                "total_attempts": {
                    "type": "integer"
                },
                "total_duration_seconds": {
                    "type": "integer"
                },
                "total_work_time_seconds": {
                    "type": "integer"
                }
            }
        },
        "handlers.BuildMessageRequest": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string"
                }
            }
        },
        "handlers.BulkConversionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.BulkConversionResult"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.BulkConversionResult": {
            "type": "object",
            "properties": {
                "bounty_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.BulkTicketToBountyRequest": {
            "type": "object",
            "properties": {
                "tickets_to_bounties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TicketToBountyItem"
                    }
                }
            }
        },
        "handlers.ChatResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.ConnectionCodesListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "codes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ConnectionCodesList"
                            }
                        },
                        "total": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.CreateActivityRequest": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author": {
                    "$ref": "#/definitions/db.AuthorType"
                },
                "author_ref": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateBountyResponse": {
            "type": "object",
            "properties": {
                "bounty_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.CreateFeatureFlagRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateOrEditChatRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateOrEditTicket": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.TicketStatus"
                }
            }
        },
        "handlers.CreateTicketPlanRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "feature_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phase_id": {
                    "type": "string"
                },
                "source_websocket": {
                    "type": "string"
                },
                "ticket_group_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.CreateWorkflowRequestRequest": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string"
                },
                "response_data": {
                    "$ref": "#/definitions/db.PropertyMap"
                }
            }
        },
        "handlers.FeatureFlagResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.FileResponse": {
            "type": "object",
            "properties": {
                "asset": {
                    "$ref": "#/definitions/db.FileAsset"
                },
                "isExisting": {
                    "type": "boolean"
                },
                "success": {
                    "type": "boolean"
                },
                "uploadTime": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "handlers.HistoryChatResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.ListFilesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.FileAsset"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/handlers.PaginationResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "handlers.LnAuthResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.PaginationResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "handlers.ProcessChatRequest": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "properties": {
                        "chatId": {
                            "type": "string"
                        },
                        "messageId": {
                            "type": "string"
                        },
                        "response": {
                            "type": "string"
                        },
                        "sourceWebsocketId": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "handlers.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                },
                "k1": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/db.Person"
                }
            }
        },
        "handlers.SendMessageRequest": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "contextTags": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "modelSelection": {
                    "type": "string"
                },
                "pdf_url": {
                    "type": "string"
                },
                "sourceWebsocketId": {
                    "type": "string"
                },
                "workspaceUUID": {
                    "type": "string"
                }
            }
        },
        "handlers.SendTicketPlanRequest": {
            "type": "object",
            "properties": {
                "feature_id": {
                    "type": "string"
                },
                "phase_id": {
                    "type": "string"
                },
                "request_uuid": {
                    "type": "string"
                },
                "source_websocket": {
                    "type": "string"
                },
                "ticket_group_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.SendTicketPlanResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "request_uuid": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.SnippetRequest": {
            "type": "object",
            "properties": {
                "snippet": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.TicketPlanResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.TicketResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "ticket_id": {
                    "type": "string"
                }
            }
        },
        "handlers.TicketToBountyItem": {
            "type": "object",
            "properties": {
                "ticketUUID": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateFeatureFlagEndpointRequest": {
            "type": "object",
            "properties": {
                "new_endpoint_path": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateFeatureFlagRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateProofStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/db.ProofOfWorkStatus"
                }
            }
        },
        "handlers.UpdateTicketRequest": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "source": {
                            "type": "string"
                        }
                    }
                },
                "ticket": {
                    "$ref": "#/definitions/db.Tickets"
                }
            }
        },
        "handlers.UpdateTicketSequenceRequest": {
            "type": "object",
            "properties": {
                "ticket": {
                    "$ref": "#/definitions/db.Tickets"
                }
            }
        },
        "handlers.WantedsHeaderResponse": {
            "type": "object",
            "properties": {
                "bounties_count": {
                    "type": "integer"
                },
                "developer_count": {
                    "type": "integer"
                },
                "people": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.PersonInShort"
                    }
                }
            }
        },
        "handlers.WebhookActivityRequest": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author": {
                    "$ref": "#/definitions/db.AuthorType"
                },
                "author_ref": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "feature_uuid": {
                    "type": "string"
                },
                "phase_uuid": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thread_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            }
        },
        "handlers.WebhookResponse": {
            "type": "object",
            "properties": {
                "activity_id": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.TicketReviewRequest": {
            "type": "object",
            "properties": {
                "requestUUID": {
                    "type": "string"
                },
                "sourceWebsocket": {
                    "type": "string"
                },
                "value": {
                    "type": "object",
                    "required": [
                        "ticketDescription",
                        "ticketUUID"
                    ],
                    "properties": {
                        "featureUUID": {
                            "type": "string"
                        },
                        "phaseUUID": {
                            "type": "string"
                        },
                        "ticketDescription": {
                            "type": "string"
                        },
                        "ticketName": {
                            "type": "string"
                        },
                        "ticketUUID": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "CypressAuth": {
            "description": "No authentication needed when in test mode",
            "type": "apiKey",
            "name": "x-cypress",
            "in": "header"
        },
        "PubKeyContextAuth": {
            "description": "JWT token for authentication. Can also be provided as a query parameter named 'token'",
            "type": "apiKey",
            "name": "x-jwt",
            "in": "header"
        },
        "SuperAdminAuth": {
            "description": "JWT token for super admin authentication. Can also be provided as a query parameter named 'token'",
            "type": "apiKey",
            "name": "x-jwt",
            "in": "header"
        }
    }
}